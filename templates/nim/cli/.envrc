#!/usr/bin/env bash
use flake

# Smart caching: rebuild glot if flake.lock is newer than cached binary
CACHE_FILE=".cache/bin/glot"
if [[ ! -f "$CACHE_FILE" ]] || [[ "flake.lock" -nt "$CACHE_FILE" ]]; then
    echo "📦 Setting up glot CLI..."
    mkdir -p .cache/bin
    if nix build .#glot -o .cache/glot-link 2>/dev/null; then
        cp .cache/glot-link/bin/glot "$CACHE_FILE"
        chmod +x "$CACHE_FILE"
        rm .cache/glot-link
        echo "✅ glot CLI ready"
    else
        echo "⚠️  Could not cache glot CLI, using nix run fallback"
    fi
fi

# Add cached glot to PATH if available
if [[ -f "$CACHE_FILE" ]]; then
    export PATH="$(pwd)/.cache/bin:$PATH"
fi

# Install shell completions for better UX
if command -v glot &> /dev/null; then
    # Detect shell and install completions
    if [[ -n "$BASH_VERSION" ]]; then
        COMPLETION_DIR="$HOME/.local/share/bash-completion/completions"
        mkdir -p "$COMPLETION_DIR"
        if [[ ! -f "$COMPLETION_DIR/glot" ]] || [[ "$CACHE_FILE" -nt "$COMPLETION_DIR/glot" ]]; then
            glot completion bash > "$COMPLETION_DIR/glot" 2>/dev/null || true
        fi
    elif [[ -n "$ZSH_VERSION" ]]; then
        COMPLETION_DIR="$HOME/.config/zsh/completions"
        mkdir -p "$COMPLETION_DIR"
        if [[ ! -f "$COMPLETION_DIR/_glot" ]] || [[ "$CACHE_FILE" -nt "$COMPLETION_DIR/_glot" ]]; then
            glot completion zsh > "$COMPLETION_DIR/_glot" 2>/dev/null || true
        fi
        # Add to fpath if not already there
        if [[ ":$fpath:" != *":$COMPLETION_DIR:"* ]]; then
            fpath=("$COMPLETION_DIR" $fpath)
        fi
    elif [[ -n "$FISH_VERSION" ]]; then
        COMPLETION_DIR="$HOME/.config/fish/completions"
        mkdir -p "$COMPLETION_DIR"
        if [[ ! -f "$COMPLETION_DIR/glot.fish" ]] || [[ "$CACHE_FILE" -nt "$COMPLETION_DIR/glot.fish" ]]; then
            glot completion fish > "$COMPLETION_DIR/glot.fish" 2>/dev/null || true
        fi
    fi
fi